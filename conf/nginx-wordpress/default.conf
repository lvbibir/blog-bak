server {
	listen 80 ;
	listen [::]:80;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.php;
	server_name _;

    set $skip_cache 0;
    # post 访问不缓存
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    # 动态查询不缓存
    if ($query_string != "") {
        set $skip_cache 1;
    }
    # 后台等特定页面不缓存（其他需求请自行添加即可）
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml|nginx.log") {
        set $skip_cache 1;
    }
    # 对登录用户、评论过的用户不展示缓存（建议禁用登录和评论用户的缓存，不要删除这里面的内容就对了，默认设置非常合理）
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }
    # 不要乱改ip地址
    location ~ [^/]\.php(/|$) {
        try_files $uri =404;
        fastcgi_pass    172.19.0.4:9000;
        fastcgi_index   index.php;
        include         fastcgi.conf;
        # 获取真实IP
        set_real_ip_from 172.19.0.0/16;
        real_ip_header  X-Forwarded-For;
        real_ip_recursive   on;
        # 新增的缓存规则
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        add_header X-Cache "$upstream_cache_status From $host";
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 301 302 304 1d;
        fastcgi_cache_valid 404 10m;
    }
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    # 缓存清理配置（可选模块，请细看下文说明）
    location ~ /purge(/.*) {
        allow 127.0.0.1;
        # 默认是所以人都可以清理缓存，设置为只能自己清理，请把下面的ip段改为自己服务器的ip
        allow 172.19.0.0/16;
        deny all;
        fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
    }

    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
            access_log off; 
            log_not_found off; 
            expires max;
    }
    location = /robots.txt { 
        access_log off; 
        log_not_found off; 
    }
    location ~ /\. { 
        deny  all; 
        access_log off; 
        log_not_found off;
    }
    
}
